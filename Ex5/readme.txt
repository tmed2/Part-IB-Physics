This week, after making a working model of a two body (one fixed) gravitational 
system, I decided to extend the model by making the two body system. By using this 
model with known initial conditions, i.e. an Earth-like planet and Sun-like star,
I was able to perturb the initial conditions and examine the resulting behaviour of 
the system. For the Earth-like conditions (given in the .cc file) the behaviour
was as expected: an orbit of low eccentricity; kinetic & potential energy varied, 
but their sum was constant. The 'Sun' did (as expected) very little, changing 
by almost nothing in position or energy. This makes sense physically, as it's
inertia is many orders of magnitude larger than that of the 'Earth'.  Although 
I looked at most combinations of plots, the most interesting I found were (x1, y1) 
& (t, T1) along with (t, V1) and (t, V1 + T1). 

In order to investigate the change in initial conditions on a stable orbit,
I changed the velocity initial	conditions. Changing the initial velocity 
(such that it had the same kinetic energy as the almost circular orbit) in direction.
[this will make more sense after checking the code]
eg A.v[0] = (1/sqrt(2))*(1*au*8*atan(1))/(TerrT);
   A.v[1] = (1/sqrt(2))*(1*au*8*atan(1))/(TerrT);
   
All but the most extreme deviations from the circular case 
resulted in increasingly eccentric orbits. Reversing the sign of the components 
just changed the orientation of the ellipse. Meanwhile the energy of the orbiting
bodies showed spikes in kinetic energy (at closest approach) and corresponding dips 
at the same. The time period of the orbit didn't seem to be dependent
on the initial conditions; the program would run the simulation for roughly one 
Earth year, and this was always resulted in about a time periods worth of plot(t, x1)
or plot(t, y1).

In the limiting cases, where the initial velocity was directed directly away from, 
or directly toward the 'sun', collision occurred eventually (at some lower 
angles the same occurred as the bodies had finite radii which determined their 
collision state). This is because, despite the body having the balance of T and V
to maintain a bound orbit, if the velocity is directed in this way, the the body
can't "fall" around the Sun. Also it does not have enough kinetic energy to escape.

By changing the mass of the orbiting body, to one that is 1.2 times that of the Sun,
I experimented with making a model of a binary star system, changing the initial
velocity conditions until a stable orbit was observed. The stable initial 
conditions are those given in the solution file. As can be deduced by plot(x1, y1)
and plot(x2, y2), the stars orbit their mutual centre of mass, with the less massive
star having a larger semi-major axis. However, as can bee seen from the plot, the
trajectories don't go over themselves after one period. I suspected (and conformed 
by using a smaller 'dt' and many more steps [which took a long time]) that this was 
due to the limits of the numerical method. This problem was not observed for the 
Earth-like conditions. However the main form of the orbits is apparent.

The program itself implements the Leapfrog (which is ostensibly more accurate than 
Euler, but easier to implement than Runge-Kutta) method to generate the 
trajectory and then writes the data to '.dat' files for use in other programs.
I found, after using both gnuplot and MatLab, that MatLab could cope with larger 
numbers of points (much) more easily. As such, I used MatLab to plot the data 
generated by the program (I could generate a more accurate plot with more data
points in a single period). Since I used the import data function, and only basic
commands like 'plot(x, y)' etc, I have not included a .m script with the solution.

My solution was in a file called TwoBodySim.cc.